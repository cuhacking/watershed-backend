name: CI (Integration)
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  # Label of the container job
  build-and-test:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    container: node:12.19.0-buster-slim

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_DB: watershed-test
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Setup yarn and install dependencies
        run: | 
          yarn set version berry
          yarn

      - name: Start server
        run: |
          yarn start > run.log &
          sleep 30
        env:
          TYPEORM_HOST: postgres
          TYPEORM_PORT: 5432
          TYPEORM_USERNAME: test
          TYPEORM_PASSWORD: test
          TYPEORM_DATABASE: watershed-test
          TYPEORM_SYNCHRONIZE : true
          TYPEORM_CONNECTION: postgres

      - name: Run tests
        if: ${{ always() }}
        run: yarn test
      
      - name: Dump run log
        run: cat run.log
      
