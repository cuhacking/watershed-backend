{
	"info": {
		"_postman_id": "1005e352-6c74-44c3-8031-a8916a06f580",
		"name": "Watershed Copy",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "0. Status",
			"item": [
				{
					"name": "0.1 Check API Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9e309947-cf1d-4ea7-ac2a-43ca76a04072",
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{HOST}}/api",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api"
							]
						}
					},
					"response": []
				},
				{
					"name": "0.2 Check Database Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cf55ada5-92a4-40b7-b483-5808709f8a88",
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{HOST}}/api/status",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"status"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "1. Users",
			"item": [
				{
					"name": "1.1 Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7405907c-9889-48ba-888b-56c581c83a9f",
								"exec": [
									"pm.test(\"Status code is 201\", () => {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.environment.set(\"userId\", pm.response.json().uuid);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\": \"Password\",\r\n    \"lastName\": \"Test\",\r\n    \"email\": \"password@test.com\",\r\n    \"password\": \"password\",\r\n    \"role\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST}}/api/user",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "1.2 Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "58686c11-e682-491e-8bc1-a99b940d8500",
								"exec": [
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 201\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Object should be returned\", () => {\r",
									"    pm.expect(jsonData).to.be.an(\"object\");\r",
									"    pm.expect(jsonData).to.not.be.empty;\r",
									"});\r",
									"\r",
									"pm.test(\"Access and Refresh Tokens are returned\", () => {\r",
									"        pm.expect(jsonData).to.have.all.keys(\"refreshToken\", \"accessToken\");\r",
									"});\r",
									"\r",
									"pm.environment.set(\"ACCESS_TOKEN\", jsonData.accessToken.token);\r",
									"pm.environment.set(\"REFRESH_TOKEN\", jsonData.refreshToken.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"password@test.com\",\r\n    \"password\": \"password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST}}/api/auth/login",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "1.3 Get All Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4f59c211-8742-425d-b5bf-0e255f2d5ae8",
								"exec": [
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 201\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Array should be returned\", () => {\r",
									"    pm.expect(jsonData).to.be.an(\"array\");\r",
									"    pm.expect(jsonData).to.not.be.empty;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{HOST}}/api/user",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "1.4 Get Created User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eb88ea35-0389-4d91-9d87-e6dd6f4f3c4f",
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{HOST}}/api/user/{{userId}}",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"user",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "1.5 Delete Created User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b2303652-403e-409e-a2a0-4920178a505b",
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.environment.get(\"variable_key\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{HOST}}/api/user/{{userId}}",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"user",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "1.6 Check Deleted User No Longer Exists",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "be32bed3-ddef-4dca-b88e-e422a98c56f8",
								"exec": [
									"pm.test(\"Status code is 404\", () => {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{HOST}}/api/user/{{userId}}",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"user",
								"{{userId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "2. Auth",
			"item": [
				{
					"name": "2.1 Create Organizer User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a97b76cf-1ec9-46e5-9fd7-b63fe7c313a0",
								"exec": [
									"pm.test(\"Status code is 201\", () => {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.environment.set(\"userId\", pm.response.json().uuid);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\": \"Password\",\r\n    \"lastName\": \"Test\",\r\n    \"email\": \"password@test.com\",\r\n    \"password\": \"password\",\r\n    \"role\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST}}/api/user",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "2.2 Protected Enpoint Not Logged In",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "49714206-9506-4b12-bd43-e45d74aebb54",
								"exec": [
									"pm.test(\"Status code is 401\", () => {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{HOST}}/api/user",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "2.3 Invalid Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2f7e2edb-30ff-49a0-aa60-858729c10024",
								"exec": [
									"pm.test(\"Status code is 401\", () => {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer blah",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{HOST}}/api/user",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "2.4 Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7425cf76-38a6-4667-b1af-b4bd24497b9c",
								"exec": [
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 201\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Object should be returned\", () => {\r",
									"    pm.expect(jsonData).to.be.an(\"object\");\r",
									"    pm.expect(jsonData).to.not.be.empty;\r",
									"});\r",
									"\r",
									"pm.test(\"Access and Refresh Tokens are returned\", () => {\r",
									"        pm.expect(jsonData).to.have.all.keys(\"refreshToken\", \"accessToken\");\r",
									"});\r",
									"\r",
									"pm.environment.set(\"ACCESS_TOKEN\", jsonData.accessToken.token);\r",
									"pm.environment.set(\"REFRESH_TOKEN\", jsonData.refreshToken.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"password@test.com\",\r\n    \"password\": \"password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST}}/api/auth/login",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "2.5 Protected Enpoint Logged In",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c48abbd0-8d53-4fdf-a3f2-be01ee245dfc",
								"exec": [
									"pm.test(\"Status code is 401\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{HOST}}/api/user",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "2.6 Refresh Token Can't Be Used For Auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "da7c86db-cc64-4351-9d1e-96a0ed20ed1c",
								"exec": [
									"pm.test(\"Status code is 401\", () => {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{REFRESH_TOKEN}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{HOST}}/api/user",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "2.7 Refresh Access Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8d1c0988-3a01-46f5-8341-c9b714d3d748",
								"exec": [
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 201\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Object should be returned\", () => {\r",
									"    pm.expect(jsonData).to.be.an(\"object\");\r",
									"    pm.expect(jsonData).to.not.be.empty;\r",
									"});\r",
									"\r",
									"pm.test(\"Access Token is returned\", () => {\r",
									"        pm.expect(jsonData).to.have.property(\"accessToken\");\r",
									"});\r",
									"\r",
									"pm.environment.set(\"NEW_ACCESS_TOKEN\", jsonData.accessToken.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"token\": \"{{REFRESH_TOKEN}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST}}/api/auth/refresh",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"auth",
								"refresh"
							]
						}
					},
					"response": []
				},
				{
					"name": "2.8 Protected Enpoint New Access Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ff5823c5-5bad-4560-b044-a0e73e5c60a7",
								"exec": [
									"pm.test(\"Status code is 401\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{NEW_ACCESS_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{HOST}}/api/user",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "2.9 Logout",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{HOST}}/api/auth/logout",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"auth",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "2.10 Protected Enpoint After Logout fails",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9c97cbb0-fd15-4215-8374-498cc2acd4a7",
								"exec": [
									"pm.test(\"Status code is 401\", () => {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{NEW_ACCESS_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{HOST}}/api/user",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "2.11 Create Hacker User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "58b47983-2878-45d6-98f2-4706c084cf15",
								"exec": [
									"pm.test(\"Status code is 201\", () => {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.environment.set(\"userId\", pm.response.json().uuid);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\": \"Hacker\",\r\n    \"lastName\": \"Test\",\r\n    \"email\": \"hacker@test.com\",\r\n    \"password\": \"password\",\r\n    \"role\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST}}/api/user",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "2.12 Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "200dc523-8d22-4cd5-884d-ec7300ecfa9e",
								"exec": [
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Object should be returned\", () => {\r",
									"    pm.expect(jsonData).to.be.an(\"object\");\r",
									"    pm.expect(jsonData).to.not.be.empty;\r",
									"});\r",
									"\r",
									"pm.test(\"Access and Refresh Tokens are returned\", () => {\r",
									"        pm.expect(jsonData).to.have.all.keys(\"refreshToken\", \"accessToken\");\r",
									"});\r",
									"\r",
									"pm.environment.set(\"ACCESS_TOKEN\", jsonData.accessToken.token);\r",
									"pm.environment.set(\"REFRESH_TOKEN\", jsonData.refreshToken.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"hacker@test.com\",\r\n    \"password\": \"password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST}}/api/auth/login",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "2.13 Protected Enpoint Unauthorized",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cda296d8-3978-44a8-96fc-e0fd081e64e6",
								"exec": [
									"pm.test(\"Status code is 403\", () => {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{NEW_ACCESS_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{HOST}}/api/user",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"user"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}